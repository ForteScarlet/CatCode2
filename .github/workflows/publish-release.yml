# native package workflows
name: build and publish release
on:
  push:
    tags:
      - v**

env:
  GPG_KEY_ID: ${{ secrets.GPG_KEY_ID }}
  GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
  GPG_PASSWORD: ${{ secrets.GPG_PASSWORD }}
  OSSRH_USER: ${{ secrets.OSS_USERNAME }}
  OSSRH_PASSWORD: ${{ secrets.OSS_PASSWORD }}
  CATCODE2_RELEASE: true
  GRADLE_OPTS: "-Xmx8G -Dfile.encoding=UTF-8"


jobs:
  test-build-publish:
    name: Test and build
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      # 检出仓库代码
      - name: Check out repo
        uses: actions/checkout@v2
        with:
          # release workflow should have access to all tags
          fetch-depth: 0

      # Setup java
      # https://github.com/marketplace/actions/setup-java-jdk
      - name: Setup Java 8
        uses: actions/setup-java@v2
        with:
          distribution: 'temurin'
          java-version: '8'

      - name: Status git before
        run: git status

      - name: Test
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: assemble allTests

      - name: Build and publish
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: |
            build
            copySharedLibs
            copyJsFileToSharedLibs
            -x test
            -Pkotlin.daemon.jvmargs="-Xmx8g -Dfile.encoding=UTF-8"
            -Porg.gradle.jvmargs="-Xmx8g -Dfile.encoding=UTF-8"
            -Porg.gradle.workers.max=8
            -Porg.gradle.parallel=true

      - name: Upload build artifacts
        uses: actions/upload-artifact@v2.3.1
        with:
          name: distributions
          path: build/releaseSharedLibs/**

      - name: Publish to sonatype
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: 7.5.1
          arguments: |
            publishToSonatype
            closeAndReleaseStagingRepository
            --info
            --warning-mode all
            -x test
            -Pkotlin.daemon.jvmargs="-Xmx8G -Dfile.encoding=UTF-8"
            -Porg.gradle.jvmargs="-Xmx8G -Dfile.encoding=UTF-8"
            -Porg.gradle.workers.max=8
            -Porg.gradle.parallel=true


#  publish-to-maven:
#    name: Publish To Maven
#    strategy:
#      matrix:
#        os: [ macos-latest, ubuntu-latest, windows-latest ]
#    runs-on: ${{ matrix.os }}
##    runs-on: ubuntu-latest
#    needs: package
#    steps:
#      # 检出仓库代码
#      - name: Check out repo
#        uses: actions/checkout@v2
#
#      # Setup java
#      # https://github.com/marketplace/actions/setup-java-jdk
#      - name: Setup Java 8
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'temurin'
#          java-version: '8'
#
#      - name: Publish To Sonatype
#        uses: gradle/gradle-build-action@v2
#        with:
#          gradle-version: 7.5.1
#          arguments: |
#            publishToSonatype
#            closeAndReleaseStagingRepository
#            --info
#            --warning-mode all
#            -x test
#            -Pkotlin.daemon.jvmargs="-Xmx8G -Dfile.encoding=UTF-8"
#            -Porg.gradle.jvmargs="-Xmx8G -Dfile.encoding=UTF-8"
#            -Porg.gradle.workers.max=8
#            -Porg.gradle.parallel=true


  create-release:
    runs-on: ubuntu-latest
    needs: test-build-publish

    permissions:
      contents: write

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: distributions
          path: ./distributions/

      # Releases.
      - name: Create github releases
        uses: softprops/action-gh-release@v0.1.14
        with:
          token: ${{ secrets.FORTE_TOKEN }}
          files: ./distributions/**
#          body_path: .changelog/${{ github.ref_name }}.md
          generate_release_notes: true
#          draft: true
